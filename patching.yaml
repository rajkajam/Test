---
- hosts: test-servers
  user: dpnipat1
  become: yes
  become_method: sudo
  tasks:
   # purpose of this task to check if application is running or stopped
   - name: verify application/database processes are not running
     shell: if ps -eaf |egrep -i "apache|http"|grep -v grep> /dev/null;then echo 'process_running';else echo 'process_not_running';fi
     ignore_errors: true
     register: app_process_check

   # This task is decission, play will fail/quit, if application is running
   - name: decission point to start patching
     fail: msg="{{ inventory_hostname }} have running application. please stop the application first, then attempt patching."
     when: app_process_check.stdout == "process_running"

   # This task will upgrade/install the rpm's if application is stopped
   - name: upgrade all packages on the server
     yum:
      name="*"
      state=latest
     when: app_process_check.stdout == "process_not_running" and ansible_distribution == 'CentOS' or ansible_distribution == "Redhat"
     register: yum_update

   # This task is to check if kernel update happend and system needs reboot or not
   - name: check if reboot required after kernel update.
     shell: KERNEL_NEW=$(rpm -qa --last kernel |head -1|awk '{print $1}' | sed 's/kernel.//'); KERNEL_NOW=$(uname -r);if [[ $KERNEL_NEW != $KERNEL_NOW ]]; then echo "reboot_needed"; else echo "reboot_not_needed"; fi
     ignore_errors: true
     register: reboot_required

   # This task is to restart the system
   - name: restart system
     command: shutdown -r +1 "rebooting system after patching"
     async: 0
     poll: 0
     when: reboot_required.stdout == "reboot_needed"
     register: reboot_started
     ignore_errors: true

   # This task is to wait for 3 minutes for system to come up after the reboot
   - name: check if system responding to ssh
     local_action:
      module: wait_for
       hosts={{ inventory_hostname }}
       port=22
       delay=15
       timeout=300
       state=started
     when: reboot_started|changed
